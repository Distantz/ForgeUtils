# .github/workflows/docs.yml
name: Build & Deploy Lua Docs (luals-docs-gen + mdbook)

on:
  push:
    branches:
      - main # Trigger on pushes to the 'main' branch
      # IMPORTANT: If you're on a different branch for testing (e.g., 'feature/my-docs-branch'),
      # uncomment and add your branch here:
      # - feature/my-docs-branch
  pull_request:
    branches:
      - main # Optional: run on pull requests targeting 'main' for documentation previews
      # IMPORTANT: If you want PRs from your testing branch to trigger, uncomment and add:
      # - feature/my-docs-branch

jobs:
  build:
    runs-on: ubuntu-latest # Use a Linux environment for the build process
    steps:
      - name: Checkout main repository code
        uses: actions/checkout@v4
        with:
          # Clones your main repo into a subdirectory named 'repo_main'
          path: repo_main

      - name: Checkout luals-docs-gen repository
        uses: actions/checkout@v4
        with:
          repository: emuell/luals-docs-gen # Using 'emuell' as per your last input
          # Clones luals-docs-gen into a subdirectory named 'luals_docs_gen_repo'
          path: luals_docs_gen_repo
          token: ${{ secrets.GITHUB_TOKEN }} # Use the automatically provided token

      # --- DEBUG STEP 1: After cloning luals-docs-gen ---
      - name: Debug: List contents of luals_docs_gen_repo after clone
        run: |
          echo "Contents of ${GITHUB_WORKSPACE}/luals_docs_gen_repo:"
          ls -la "${GITHUB_WORKSPACE}/luals_docs_gen_repo"
          echo "Contents of ${GITHUB_WORKSPACE}/luals_docs_gen_repo/src:"
          ls -la "${GITHUB_WORKSPACE}/luals_docs_gen_repo/src"

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal # Install only essential components for faster setup

      - name: Install luals-docs-gen from source
        # This step will `cd` into the cloned repo and run `cargo build`.
        # Any errors during compilation should appear in the logs for this step.
        run: |
          echo "Navigating to: ${GITHUB_WORKSPACE}/luals_docs_gen_repo"
          cd "${GITHUB_WORKSPACE}/luals_docs_gen_repo"
          echo "Running cargo build --release..."
          cargo build --release
          echo "cargo build finished."

      # --- DEBUG STEP 2: After building luals-docs-gen ---
      - name: Debug: Verify luals-docs-gen executable after build
        run: |
          LUALS_EXEC_PATH="${GITHUB_WORKSPACE}/luals_docs_gen_repo/target/release/luals-docs-gen"
          echo "Checking for executable at: ${LUALS_EXEC_PATH}"
          if [ -f "$LUALS_EXEC_PATH" ]; then
            echo "SUCCESS: luals-docs-gen executable found at: $LUALS_EXEC_PATH"
            echo "Permissions:"
            ls -l "$LUALS_EXEC_PATH"
          else
            echo "ERROR: luals-docs-gen executable NOT FOUND at: $LUALS_EXEC_PATH"
            echo "Listing contents of ${GITHUB_WORKSPACE}/luals_docs_gen_repo/target/:"
            ls -la "${GITHUB_WORKSPACE}/luals_docs_gen_repo/target/" || echo "target directory not found."
            echo "Listing contents of ${GITHUB_WORKSPACE}/luals_docs_gen_repo/target/release/:"
            ls -la "${GITHUB_WORKSPACE}/luals_docs_gen_repo/target/release/" || echo "release directory not found."
            exit 1 # Fail the step if binary not found - this is key to debugging!
          fi

      - name: Install mdbook
        run: |
          cargo install mdbook

      - name: Generate Markdown with luals-docs-gen
        run: |
          # Define absolute paths for clarity and robustness
          LUALS_EXEC_PATH="${GITHUB_WORKSPACE}/luals_docs_gen_repo/target/release/luals-docs-gen"
          PROJECT_ROOT_ON_RUNNER="${GITHUB_WORKSPACE}/repo_main"
          LUA_SOURCE_PATH="${PROJECT_ROOT_ON_RUNNER}/ForgeUtils/Main" # Based on your previous input
          DOCS_OUTPUT_BASE_PATH="${PROJECT_ROOT_ON_RUNNER}/ForgeUtils/docs"
          API_OUTPUT_DIR="${DOCS_OUTPUT_BASE_PATH}/src/api"

          mkdir -p "${API_OUTPUT_DIR}"

          # Explicitly make the luals-docs-gen executable executable
          # This is the line that has been causing you trouble if the file isn't there!
          chmod +x "${LUALS_EXEC_PATH}"

          # Run luals-docs-gen using absolute paths
          "${LUALS_EXEC_PATH}" --library "${LUA_SOURCE_PATH}" --output "${API_OUTPUT_DIR}"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Generate mdbook SUMMARY.md
        run: |
          cd "${GITHUB_WORKSPACE}/repo_main/ForgeUtils/docs"
          python generate_summary.py

      - name: Build mdbook documentation
        run: |
          cd "${GITHUB_WORKSPACE}/repo_main/ForgeUtils/docs"
          mdbook build

      - name: Upload documentation artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "${GITHUB_WORKSPACE}/repo_main/ForgeUtils/docs/book"

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4