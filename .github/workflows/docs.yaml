name: Build & Deploy Lua Docs (luals-docs-gen + mdbook)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository code
        uses: actions/checkout@v4
        with:
          path: repo_main

      - name: Checkout luals-docs-gen repository
        uses: actions/checkout@v4
        with:
          repository: emuell/luals-docs-gen
          path: luals_docs_gen_repo
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v2
        with:
          mdbook-version: 'latest'

      - name: Generate Markdown with luals-docs-gen
        run: |
          # Define absolute paths for clarity and robustness using GITHUB_WORKSPACE

          PROJECT_ROOT_ON_RUNNER="${GITHUB_WORKSPACE}/repo_main"

          LUA_SOURCE_PATH="${PROJECT_ROOT_ON_RUNNER}/Main"
          DOCS_OUTPUT_BASE_PATH="${PROJECT_ROOT_ON_RUNNER}/Docs/src"

          cat "${DOCS_OUTPUT_BASE_PATH}/SUMMARY.md"

          # Run luals-docs-gen using absolute paths
          cargo run --manifest-path "${GITHUB_WORKSPACE}/luals_docs_gen_repo/Cargo.toml" -- "${LUA_SOURCE_PATH}" "${DOCS_OUTPUT_BASE_PATH}"

          cat "${DOCS_OUTPUT_BASE_PATH}/SUMMARY.md"

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.x'

      # - name: Generate mdbook SUMMARY.md
      #   run: |
      #     cd "${GITHUB_WORKSPACE}/repo_main/Docs"
      #     python generate_summary.py

      - name: Build mdbook documentation
        run: |
          cd "${GITHUB_WORKSPACE}/repo_main/Docs"
          mdbook build

      - name: Check mdbook output
        run: |
          echo "Contents of Docs after build:"
          ls -l "${GITHUB_WORKSPACE}/repo_main/Docs"
          echo "Contents of book dir (if exists):"
          ls -l "${GITHUB_WORKSPACE}/repo_main/Docs/book" || echo "No book directory found"

      - name: Upload mdBook output as artifact
        id: upload-pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: repo_main/Docs/book

  deploy:
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy-pages.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deploy-pages
        uses: actions/deploy-pages@v4

      - name: Debug deployed contents
        run: |
          echo "Deployed directory listing:"
          find .