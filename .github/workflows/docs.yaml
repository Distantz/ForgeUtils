name: Build & Deploy Lua Docs

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository code
        uses: actions/checkout@v4
        with:
          path: your_repo_code # Clones your main repo into 'your_repo_code' dir

      - name: Checkout luals-docs-gen repository
        uses: actions/checkout@v4
        with:
          repository: RCLTK/luals-docs-gen # Specify the other repo
          path: luals-docs-gen_clone # Clones it into this path
          token: ${{ secrets.GITHUB_TOKEN }} # Use the automatically provided token

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install luals-docs-gen from source
        # Build the executable from the cloned luals-docs-gen repo
        run: |
          cd luals-docs-gen_clone # Navigate to the cloned repo
          cargo build --release
          # The compiled tool will be at luals-docs-gen_clone/target/release/luals-docs-gen

      - name: Install mdbook
        run: |
          cargo install mdbook

      - name: Generate Markdown with luals-docs-gen
        # Now, call luals-docs-gen from its built location
        # and point it to your main repository's Lua code.
        run: |
          # Create the output directory relative to your main repo's root
          mkdir -p your_repo_code/docs/src/api
          # Execute luals-docs-gen, pointing to your main repo's code.
          # The path to the tool is relative to the runner's root.
          ./luals-docs-gen_clone/target/release/luals-docs-gen --library your_repo_code --output your_repo_code/docs/src/api
          # ADJUST '--library your_repo_code' IF YOUR LUA SOURCE IS IN A SUBDIRECTORY
          # For example, if Lua code is in 'your_repo_code/src/':
          # ./luals-docs-gen_clone/target/release/luals-docs-gen --library your_repo_code/src --output your_repo_code/docs/src/api

      - name: Set up Python (for SUMMARY.md generation)
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Generate mdbook SUMMARY.md
        # Navigate to your main repository's docs directory and run the Python script
        run: |
          cd your_repo_code/docs
          python generate_summary.py

      - name: Build mdbook documentation
        # Navigate to your main repository's docs directory and build the HTML site
        run: |
          cd your_repo_code/docs
          mdbook build

      - name: Upload documentation artifact
        # Upload the generated HTML files from your main repository's docs/book
        uses: actions/upload-pages-artifact@v3
        with:
          path: your_repo_code/docs/book

      deploy:
        needs: build
        permissions:
          pages: write
          id-token: write
        environment:
          name: github-pages
          url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        steps:
          - name: Deploy to GitHub Pages
            id: deployment
            uses: actions/deploy-pages@v4